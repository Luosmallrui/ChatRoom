// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"chatroom/config"
	"chatroom/controller"
	"chatroom/dao"
	"chatroom/pkg/client"
	"chatroom/pkg/core"
	"chatroom/service"
	"github.com/google/wire"
)

// Injectors from wire.go:

func NewHttpInjector(conf *config.Config) *core.AppProvider {
	engine := core.NewGinServer()
	redisClient := client.NewRedisClient(conf)
	db := client.NewMySQLClient(conf)
	users := dao.NewUsers(db, redisClient)
	userService := &service.UserService{
		UsersRepo: users,
	}
	userController := &controller.UserController{
		Redis:       redisClient,
		UserService: userService,
		UsersRepo:   users,
	}
	admin := dao.NewAdmin(db)
	jwtTokenStorage := dao.NewTokenSessionStorage(redisClient)
	captchaStorage := dao.NewCaptchaStorage(redisClient)
	captcha := dao.NewBase64Captcha(captchaStorage)
	authController := &controller.AuthController{
		Config:          conf,
		AdminRepo:       admin,
		UserRepo:        users,
		JwtTokenStorage: jwtTokenStorage,
		ICaptcha:        captcha,
		UserService:     userService,
	}
	controllers := &controller.Controllers{
		User: userController,
		Auth: authController,
	}
	appProvider := &core.AppProvider{
		Config:      conf,
		Engine:      engine,
		Controllers: controllers,
	}
	return appProvider
}

// wire.go:

var providerSet = wire.NewSet(client.NewMySQLClient, client.NewRedisClient)
